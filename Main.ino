#include <Adafruit_GFX.h>
#include <Adafruit_SH110X.h>
#include <Adafruit_Fingerprint.h>
#include <Arduino.h>
#include <ESP8266WiFi.h>
#include "ESP8266HTTPClient.h"
#include <HTTPSRedirect.h>
#include <Wire.h>
int u=0;
int v=0;

#if (defined(__AVR__) || defined(ESP8266)) && !defined(__AVR_ATmega2560__)
#define Finger_Rx D5 //D3
#define Finger_Tx  D6//D4
SoftwareSerial mySerial(Finger_Rx, Finger_Tx);

#else

// #0 is green wire, #1 is white
#define mySerial Serial1
 
#endif

Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

// Enter network credentials:
const char* ssid     = "realme 5 pro";
const char* password = "12345678a";

// Enter Google Script Deployment ID:
const char *GScriptId = "AKfycbxO-W7PPQ_2xR3sx9uqdVIP4CMuZN_7c4K9GqXtGdUCosCE_laLzSMqsErNvXEsuWFdTA";

// Enter command (insert_row or append_row) and your Google Sheets sheet name (default is Sheet1):
String payload_base =  "{\"command\": \"insert_row\", \"sheet_name\": \"Sheet1\", \"values\": ";
String payload = "";

// Google Sheets setup (do not edit)
const char* host = "script.google.com";
const int httpsPort = 443;
const char* fingerprint = "";
String url = String("/macros/s/") + GScriptId + "/exec";
HTTPSRedirect* client = nullptr;

// Declare variables that will be published to Google Sheets
String user = "";
String id = "";
String enter ="";

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SH1106G display = Adafruit_SH1106G(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define Wifi_start_width 54
#define Wifi_start_height 49
const uint8_t PROGMEM Wifi_start_bits[] = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x1f,0xf0,0x00,0x00,0x00
,0x00,0x03,0xff,0xff,0x80,0x00,0x00
,0x00,0x1f,0xf0,0x1f,0xf0,0x00,0x00
,0x00,0x7e,0x00,0x00,0xfc,0x00,0x00
,0x01,0xf0,0x00,0x00,0x1f,0x00,0x00
,0x03,0xc0,0x00,0x00,0x07,0xc0,0x00
,0x0f,0x00,0x00,0x00,0x01,0xe0,0x00
,0x1c,0x00,0x00,0x00,0x00,0x70,0x00
,0x38,0x00,0x07,0xc0,0x00,0x38,0x00
,0x70,0x00,0xff,0xfe,0x00,0x1e,0x00
,0xe0,0x03,0xfc,0x7f,0xc0,0x0e,0x00
,0x00,0x1f,0x80,0x03,0xf0,0x00,0x00
,0x00,0x3c,0x00,0x00,0x78,0x00,0x00
,0x00,0xf0,0x00,0x00,0x1c,0x00,0x00
,0x01,0xe0,0x00,0x00,0x0c,0x00,0x00
,0x03,0x80,0x00,0x00,0x00,0x00,0x00
,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x3f,0xf8,0x07,0x1e,0x00
,0x00,0x00,0xff,0xfe,0x1f,0xbf,0x80
,0x00,0x03,0xe0,0x04,0x7f,0xff,0xc0
,0x00,0x07,0x80,0x00,0xff,0xff,0xe0
,0x00,0x0e,0x00,0x00,0xff,0xff,0xe0
,0x00,0x0c,0x00,0x00,0x7f,0xff,0xc0
,0x00,0x00,0x00,0x00,0xfe,0x07,0xe0
,0x00,0x00,0x00,0x03,0xf8,0x03,0xf8
,0x00,0x00,0x07,0xe7,0xf9,0xf1,0xfc
,0x00,0x00,0x1f,0xe7,0xf1,0xf9,0xfc
,0x00,0x00,0x1f,0xe7,0xf3,0xf9,0xfc
,0x00,0x00,0x3f,0xe7,0xf3,0xf9,0xfc
,0x00,0x00,0x3f,0xe7,0xf1,0xf1,0xfc
,0x00,0x00,0x3f,0xe3,0xf8,0xe3,0xfc
,0x00,0x00,0x3f,0xf3,0xfc,0x07,0xf8
,0x00,0x00,0x1f,0xf0,0x7f,0x0f,0xc0
,0x00,0x00,0x0f,0xe0,0x7f,0xff,0xe0
,0x00,0x00,0x07,0xc0,0xff,0xff,0xe0
,0x00,0x00,0x00,0x00,0x7f,0xff,0xe0
,0x00,0x00,0x00,0x00,0x3f,0xff,0x80
,0x00,0x00,0x00,0x00,0x1f,0xbf,0x00
,0x00,0x00,0x00,0x00,0x03,0x18,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
#define Wifi_connected_width 63
#define Wifi_connected_height 49
const uint8_t PROGMEM Wifi_connected_bits[] = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x03,0xff,0xff,0x80,0x00,0x00
,0x00,0x00,0x3f,0xff,0xff,0xf8,0x00,0x00
,0x00,0x01,0xff,0xff,0xff,0xff,0x00,0x00
,0x00,0x0f,0xff,0xff,0xff,0xff,0xe0,0x00
,0x00,0x3f,0xff,0xc0,0x07,0xff,0xf8,0x00
,0x00,0xff,0xf8,0x00,0x00,0x3f,0xfe,0x00
,0x03,0xff,0x80,0x00,0x00,0x03,0xff,0x80
,0x07,0xfe,0x00,0x00,0x00,0x00,0xff,0xc0
,0x1f,0xf8,0x00,0x00,0x00,0x00,0x3f,0xf0
,0x3f,0xe0,0x01,0xff,0xff,0x00,0x0f,0xf8
,0x7f,0x80,0x0f,0xff,0xff,0xe0,0x03,0xfc
,0xff,0x00,0x7f,0xff,0xff,0xfc,0x01,0xfe
,0xfc,0x01,0xff,0xff,0xff,0xff,0x00,0x7e
,0x78,0x07,0xff,0xc0,0x07,0xff,0xc0,0x3c
,0x00,0x0f,0xfc,0x00,0x00,0x7f,0xe0,0x00
,0x00,0x1f,0xf0,0x00,0x00,0x1f,0xf0,0x00
,0x00,0x3f,0xc0,0x00,0x00,0x07,0xf8,0x00
,0x00,0x7f,0x00,0x01,0x00,0x01,0xfc,0x00
,0x00,0x7e,0x00,0x7f,0xfc,0x00,0xfc,0x00
,0x00,0x3c,0x03,0xff,0xff,0x80,0x78,0x00
,0x00,0x00,0x07,0xff,0xff,0xc0,0x00,0x00
,0x00,0x00,0x1f,0xff,0xff,0xf0,0x00,0x00
,0x00,0x00,0x3f,0xf0,0x1f,0xf8,0x00,0x00
,0x00,0x00,0x3f,0x80,0x03,0xf8,0x00,0x00
,0x00,0x00,0x3f,0x00,0x01,0xf8,0x00,0x00
,0x00,0x00,0x1c,0x00,0x00,0x70,0x00,0x00
,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x0f,0xe0,0x00,0x00,0x00
,0x00,0x00,0x00,0x1f,0xf0,0x00,0x00,0x00
,0x00,0x00,0x00,0x3f,0xf8,0x00,0x00,0x00
,0x00,0x00,0x00,0x3f,0xf8,0x00,0x00,0x00
,0x00,0x00,0x00,0x3f,0xf8,0x00,0x00,0x00
,0x00,0x00,0x00,0x3f,0xf8,0x00,0x00,0x00
,0x00,0x00,0x00,0x1f,0xf0,0x00,0x00,0x00
,0x00,0x00,0x00,0x0f,0xe0,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
#define FinPr_start_width 64
#define FinPr_start_height 64
const uint8_t PROGMEM FinPr_start_bits[] = {
  0x00,0x00,0x00,0x1f,0xe0,0x00,0x00,0x00
,0x00,0x00,0x01,0xff,0xfe,0x00,0x00,0x00
,0x00,0x00,0x03,0xff,0xff,0x80,0x00,0x00
,0x00,0x00,0x0f,0xc0,0x0f,0xe0,0x00,0x00
,0x00,0x00,0x1f,0x00,0x01,0xf8,0x00,0x00
,0x00,0x00,0x3c,0x00,0x00,0x7c,0x00,0x00
,0x00,0x00,0x78,0x00,0x00,0x3e,0x00,0x00
,0x00,0x00,0xf0,0x3f,0xf8,0x0f,0x00,0x00
,0x00,0x01,0xe0,0xff,0xfe,0x07,0x80,0x00
,0x00,0x03,0xc3,0xff,0xff,0x03,0x80,0x00
,0x00,0x03,0x87,0xc0,0x07,0xc3,0xc0,0x00
,0x00,0x07,0x0f,0x00,0x03,0xe1,0xc0,0x00
,0x00,0x0f,0x0e,0x00,0x00,0xe0,0xe0,0x00
,0x00,0x0e,0x1c,0x00,0x00,0xf0,0xe0,0x00
,0x00,0x0c,0x3c,0x1f,0xe0,0x70,0xe0,0x00
,0x00,0x00,0x38,0x3f,0xf0,0x38,0x70,0x00
,0x00,0x00,0x78,0x78,0xf8,0x38,0x70,0x00
,0x00,0x00,0x70,0x70,0x3c,0x18,0x70,0x00
,0x00,0x00,0xe0,0xe0,0x1e,0x1c,0x70,0x00
,0x00,0x03,0xe1,0xe0,0x0e,0x1c,0x70,0x00
,0x00,0x0f,0xc1,0xc3,0x0e,0x1c,0x70,0x00
,0x00,0x3f,0x03,0xc3,0x8e,0x1c,0x70,0x00
,0x00,0x3e,0x03,0x87,0x0e,0x1c,0x70,0x00
,0x00,0x30,0x07,0x07,0x0e,0x18,0xe0,0x00
,0x00,0x00,0x0e,0x0e,0x0e,0x38,0xe0,0x00
,0x00,0x00,0x3e,0x1e,0x1e,0x38,0xe0,0x00
,0x00,0x00,0xf8,0x1c,0x1c,0x38,0xe0,0x00
,0x00,0x03,0xf0,0x38,0x3c,0x38,0xe0,0x00
,0x00,0x3f,0xc0,0xf8,0x78,0x38,0xe0,0x00
,0x00,0x7f,0x01,0xf0,0x70,0x38,0xf0,0x00
,0x00,0x78,0x03,0xe0,0xe0,0x38,0x70,0x00
,0x00,0x00,0x0f,0x81,0xe0,0x38,0x7c,0x00
,0x00,0x00,0x3f,0x03,0xc0,0x38,0x3e,0x00
,0x00,0x00,0xfc,0x0f,0x80,0x38,0x1e,0x00
,0x00,0x07,0xf0,0x1f,0x1c,0x1c,0x04,0x00
,0x00,0x3f,0xc0,0x3e,0x3f,0x1e,0x00,0x00
,0x00,0x7f,0x00,0xf8,0x7f,0x0f,0x00,0x00
,0x00,0x38,0x01,0xf0,0xf7,0x07,0xc0,0x00
,0x00,0x00,0x07,0xe1,0xe3,0x83,0xf8,0x00
,0x00,0x00,0x3f,0x87,0xc3,0xc0,0xfc,0x00
,0x00,0x01,0xfe,0x0f,0x81,0xe0,0x3c,0x00
,0x00,0x0f,0xf8,0x1f,0x00,0xf0,0x00,0x00
,0x00,0x1f,0xc0,0x7c,0x00,0x7c,0x00,0x00
,0x00,0x1e,0x01,0xf8,0x00,0x3f,0x00,0x00
,0x00,0x00,0x07,0xe0,0x78,0x0f,0xc0,0x00
,0x00,0x00,0x3f,0x81,0xfe,0x07,0xf0,0x00
,0x00,0x01,0xfe,0x07,0xff,0x01,0xf0,0x00
,0x00,0x07,0xf8,0x0f,0x87,0x80,0x30,0x00
,0x00,0x07,0xc0,0x3f,0x03,0xe0,0x00,0x00
,0x00,0x06,0x00,0xfc,0x01,0xf8,0x00,0x00
,0x00,0x00,0x03,0xf0,0x00,0x7e,0x00,0x00
,0x00,0x00,0x0f,0xc0,0x00,0x3f,0x80,0x00
,0x00,0x00,0x7f,0x00,0xf8,0x0f,0x80,0x00
,0x00,0x00,0xfc,0x03,0xfe,0x01,0x80,0x00
,0x00,0x00,0xf0,0x1f,0xff,0x80,0x00,0x00
,0x00,0x00,0x00,0x7f,0x07,0xe0,0x00,0x00
,0x00,0x00,0x00,0xfc,0x03,0xf8,0x00,0x00
,0x00,0x00,0x03,0xf0,0x00,0x78,0x00,0x00
,0x00,0x00,0x0f,0xc0,0x00,0x18,0x00,0x00
,0x00,0x00,0x0f,0x01,0xf8,0x00,0x00,0x00
,0x00,0x00,0x00,0x07,0xfe,0x00,0x00,0x00
,0x00,0x00,0x00,0x1f,0xfe,0x00,0x00,0x00
,0x00,0x00,0x00,0x1e,0x0e,0x00,0x00,0x00
,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00
};
#define FinPr_valid_width 64
#define FinPr_valid_height 64
const uint8_t PROGMEM FinPr_valid_bits[] = {
  0x00,0x00,0x03,0xfe,0x00,0x00,0x00,0x00
,0x00,0x00,0x1f,0xff,0xe0,0x00,0x00,0x00
,0x00,0x00,0x7f,0xff,0xf8,0x00,0x00,0x00
,0x00,0x00,0xfc,0x00,0xfe,0x00,0x00,0x00
,0x00,0x03,0xe0,0x00,0x1f,0x00,0x00,0x00
,0x00,0x07,0xc0,0x00,0x07,0x80,0x00,0x00
,0x00,0x0f,0x80,0x00,0x03,0xe0,0x00,0x00
,0x00,0x0e,0x03,0xff,0x01,0xe0,0x00,0x00
,0x00,0x1c,0x1f,0xff,0xe0,0xf0,0x00,0x00
,0x00,0x3c,0x3f,0xff,0xf0,0x78,0x00,0x00
,0x00,0x78,0x7c,0x00,0xf8,0x3c,0x00,0x00
,0x00,0x70,0xf0,0x00,0x3c,0x1c,0x00,0x00
,0x00,0xe1,0xe0,0x00,0x1e,0x1c,0x00,0x00
,0x00,0xe1,0xc0,0x00,0x0f,0x0e,0x00,0x00
,0x00,0xc3,0x81,0xfc,0x07,0x0e,0x00,0x00
,0x00,0x03,0x83,0xff,0x07,0x8e,0x00,0x00
,0x00,0x07,0x07,0x8f,0x83,0x87,0x00,0x00
,0x00,0x0f,0x0f,0x03,0xc3,0x87,0x00,0x00
,0x00,0x1e,0x0e,0x01,0xc3,0x87,0x00,0x00
,0x00,0x3c,0x1c,0x00,0xe1,0x87,0x00,0x00
,0x00,0xf8,0x1c,0x30,0xe1,0x87,0x00,0x00
,0x07,0xf0,0x38,0x70,0xe1,0x86,0x00,0x00
,0x07,0xc0,0x78,0x70,0xe3,0x8e,0x00,0x00
,0x02,0x00,0xf0,0xf0,0xe3,0x8e,0x00,0x00
,0x00,0x01,0xe0,0xe0,0xe3,0x8e,0x00,0x00
,0x00,0x03,0xc1,0xe1,0xc3,0x8e,0x00,0x00
,0x00,0x0f,0x83,0xc3,0xc3,0x8e,0x00,0x00
,0x00,0x7f,0x07,0x83,0x83,0x0e,0x00,0x00
,0x07,0xfc,0x0f,0x07,0x83,0x0e,0x00,0x00
,0x07,0xf0,0x1e,0x0f,0x03,0x0e,0x00,0x00
,0x07,0x80,0x7c,0x1e,0x03,0x07,0x00,0x00
,0x00,0x00,0xf8,0x3c,0x03,0x87,0x80,0x00
,0x00,0x03,0xf0,0x78,0x03,0x83,0xc0,0x00
,0x00,0x1f,0xc0,0xf0,0x02,0x00,0x00,0x00
,0x00,0xff,0x01,0xe1,0xc0,0x0c,0x00,0x00
,0x07,0xfc,0x03,0xc3,0xe1,0xff,0xc0,0x00
,0x07,0xe0,0x0f,0x87,0xc7,0xff,0xf0,0x00
,0x07,0x00,0x3f,0x0f,0x0f,0xff,0xfc,0x00
,0x00,0x00,0x7c,0x3e,0x3f,0xff,0xfe,0x00
,0x00,0x03,0xf8,0x7c,0x3f,0xff,0xff,0x00
,0x00,0x1f,0xe0,0xf0,0x7f,0xff,0xff,0x80
,0x00,0xff,0x83,0xe0,0xff,0xff,0xff,0x80
,0x01,0xfc,0x07,0xc1,0xff,0xff,0xe3,0xc0
,0x01,0xe0,0x1f,0x01,0xff,0xff,0xc3,0xc0
,0x00,0x00,0xfe,0x01,0xff,0xff,0x87,0xe0
,0x00,0x03,0xf8,0x13,0xff,0xff,0x0f,0xe0
,0x00,0x1f,0xe0,0x73,0xff,0xfe,0x1f,0xe0
,0x00,0x7f,0x81,0xf3,0xff,0xfc,0x1f,0xe0
,0x00,0xfc,0x03,0xe3,0xef,0xf8,0x3f,0xe0
,0x00,0x60,0x0f,0xc3,0xc7,0xf0,0x7f,0xe0
,0x00,0x00,0x3f,0x03,0xc3,0xe0,0xff,0xe0
,0x00,0x00,0xfc,0x03,0xc1,0xc1,0xff,0xe0
,0x00,0x07,0xf0,0x13,0xe0,0x83,0xff,0xe0
,0x00,0x0f,0xc0,0x7b,0xf8,0x07,0xff,0xe0
,0x00,0x0f,0x01,0xf9,0xfc,0x0f,0xff,0xc0
,0x00,0x00,0x07,0xf1,0xfe,0x1f,0xff,0xc0
,0x00,0x00,0x1f,0xc0,0xff,0x3f,0xff,0x80
,0x00,0x00,0x7e,0x00,0xff,0xff,0xff,0x80
,0x00,0x00,0xfc,0x00,0x7f,0xff,0xff,0x00
,0x00,0x00,0xf0,0x1f,0x3f,0xff,0xfe,0x00
,0x00,0x00,0x00,0x7f,0x1f,0xff,0xfc,0x00
,0x00,0x00,0x01,0xff,0x8f,0xff,0xf8,0x00
,0x00,0x00,0x03,0xe0,0xe3,0xff,0xe0,0x00
,0x00,0x00,0x01,0x80,0x00,0x7f,0x00,0x00
};
#define FinPr_invalid_width 64
#define FinPr_invalid_height 64
const uint8_t PROGMEM FinPr_invalid_bits[] = {
  0x00,0x00,0x03,0xfe,0x00,0x00,0x00,0x00
,0x00,0x00,0x1f,0xff,0xe0,0x00,0x00,0x00
,0x00,0x00,0x7f,0xff,0xf8,0x00,0x00,0x00
,0x00,0x00,0xfc,0x00,0xfe,0x00,0x00,0x00
,0x00,0x03,0xe0,0x00,0x1f,0x00,0x00,0x00
,0x00,0x07,0xc0,0x00,0x07,0x80,0x00,0x00
,0x00,0x0f,0x80,0x00,0x03,0xe0,0x00,0x00
,0x00,0x0e,0x03,0xff,0x01,0xe0,0x00,0x00
,0x00,0x1c,0x1f,0xff,0xe0,0xf0,0x00,0x00
,0x00,0x3c,0x3f,0xff,0xf0,0x78,0x00,0x00
,0x00,0x78,0x7c,0x00,0xf8,0x3c,0x00,0x00
,0x00,0x70,0xf0,0x00,0x3c,0x1c,0x00,0x00
,0x00,0xe1,0xe0,0x00,0x1e,0x1c,0x00,0x00
,0x00,0xe1,0xc0,0x00,0x0f,0x0e,0x00,0x00
,0x00,0xc3,0x81,0xfc,0x07,0x0e,0x00,0x00
,0x00,0x03,0x83,0xff,0x07,0x8e,0x00,0x00
,0x00,0x07,0x07,0x8f,0x83,0x87,0x00,0x00
,0x00,0x0f,0x0f,0x03,0xc3,0x87,0x00,0x00
,0x00,0x1e,0x0e,0x01,0xc3,0x87,0x00,0x00
,0x00,0x3c,0x1c,0x00,0xe1,0x87,0x00,0x00
,0x00,0xf8,0x1c,0x30,0xe1,0x87,0x00,0x00
,0x07,0xf0,0x38,0x70,0xe1,0x86,0x00,0x00
,0x07,0xc0,0x78,0x70,0xe3,0x8e,0x00,0x00
,0x02,0x00,0xf0,0xf0,0xe3,0x8e,0x00,0x00
,0x00,0x01,0xe0,0xe0,0xe3,0x8e,0x00,0x00
,0x00,0x03,0xc1,0xe1,0xc3,0x8e,0x00,0x00
,0x00,0x0f,0x83,0xc3,0xc3,0x8e,0x00,0x00
,0x00,0x7f,0x07,0x83,0x83,0x0e,0x00,0x00
,0x07,0xfc,0x0f,0x07,0x83,0x0e,0x00,0x00
,0x07,0xf0,0x1e,0x0f,0x03,0x0e,0x00,0x00
,0x07,0x80,0x7c,0x1e,0x03,0x07,0x00,0x00
,0x00,0x00,0xf8,0x3c,0x03,0x87,0x80,0x00
,0x00,0x03,0xf0,0x78,0x03,0x83,0xc0,0x00
,0x00,0x1f,0xc0,0xf0,0x02,0x00,0x00,0x00
,0x00,0xff,0x01,0xe1,0xc0,0x00,0x00,0x00
,0x07,0xfc,0x03,0xc3,0xe1,0xff,0xc0,0x00
,0x07,0xe0,0x0f,0x87,0xc7,0xff,0xf0,0x00
,0x07,0x00,0x3f,0x0f,0x0f,0xff,0xf8,0x00
,0x00,0x00,0x7c,0x3e,0x1f,0xff,0xfe,0x00
,0x00,0x03,0xf8,0x7c,0x3f,0xff,0xff,0x00
,0x00,0x1f,0xe0,0xf0,0x7f,0xff,0xff,0x00
,0x00,0xff,0x83,0xe0,0xfe,0xff,0xbf,0x80
,0x01,0xfc,0x07,0xc0,0xfc,0x7f,0x1f,0xc0
,0x01,0xe0,0x1f,0x01,0xf8,0x3e,0x0f,0xc0
,0x00,0x00,0xfe,0x01,0xf8,0x1c,0x07,0xe0
,0x00,0x03,0xf8,0x13,0xf8,0x00,0x0f,0xe0
,0x00,0x1f,0xe0,0x73,0xfc,0x00,0x1f,0xe0
,0x00,0x7f,0x81,0xf3,0xfe,0x00,0x3f,0xe0
,0x00,0xfc,0x03,0xe3,0xff,0x00,0x7f,0xe0
,0x00,0x60,0x0f,0xc3,0xff,0x80,0xff,0xe0
,0x00,0x00,0x3f,0x03,0xff,0x00,0x7f,0xe0
,0x00,0x00,0xfc,0x03,0xfe,0x00,0x3f,0xe0
,0x00,0x07,0xf0,0x13,0xfc,0x00,0x1f,0xe0
,0x00,0x0f,0xc0,0x79,0xf8,0x08,0x0f,0xe0
,0x00,0x0f,0x01,0xf9,0xf8,0x1c,0x0f,0xc0
,0x00,0x00,0x07,0xf1,0xfc,0x3e,0x1f,0xc0
,0x00,0x00,0x1f,0xc0,0xfe,0x7f,0x3f,0x80
,0x00,0x00,0x7e,0x00,0xff,0xff,0xff,0x80
,0x00,0x00,0xfc,0x00,0x7f,0xff,0xff,0x00
,0x00,0x00,0xf0,0x1f,0x3f,0xff,0xfe,0x00
,0x00,0x00,0x00,0x7f,0x1f,0xff,0xfc,0x00
,0x00,0x00,0x01,0xff,0x8f,0xff,0xf8,0x00
,0x00,0x00,0x03,0xe0,0xe3,0xff,0xe0,0x00
,0x00,0x00,0x01,0x80,0x00,0x7f,0x00,0x00
};
#define FinPr_failed_width 64
#define FinPr_failed_height 64
const uint8_t PROGMEM FinPr_failed_bits[] = {
0x00,0x00,0x3f,0xe0,0x00,0x00,0x00,0x00
,0x00,0x01,0xff,0xfe,0x00,0x00,0x00,0x00
,0x00,0x0f,0xc0,0x1f,0x80,0x00,0x00,0x00
,0x00,0x1e,0x00,0x03,0xc0,0x00,0x00,0x00
,0x00,0x78,0x00,0x00,0xf0,0x00,0x00,0x00
,0x00,0xe0,0x00,0x00,0x38,0x00,0x00,0x00
,0x01,0xc0,0x00,0x00,0x1c,0x00,0x00,0x00
,0x03,0x80,0x00,0x00,0x0e,0x00,0x00,0x00
,0x07,0x00,0x7f,0xe0,0x07,0x00,0x00,0x00
,0x06,0x01,0xff,0xf8,0x03,0x00,0x00,0x00
,0x0c,0x03,0xc0,0x3c,0x03,0x80,0x00,0x00
,0x1c,0x0f,0x00,0x0e,0x01,0x80,0x00,0x00
,0x18,0x0c,0x00,0x03,0x00,0xc0,0x00,0x00
,0x18,0x18,0x00,0x01,0x80,0xc0,0x00,0x00
,0x30,0x38,0x00,0x01,0xc0,0xe0,0x00,0x00
,0x30,0x30,0x0f,0x00,0xc0,0x60,0x00,0x00
,0x30,0x30,0x3f,0xc0,0xe0,0x60,0x00,0x00
,0x70,0x60,0x78,0xe0,0x60,0x60,0x00,0x00
,0x60,0x60,0x60,0x60,0x60,0x70,0x00,0x00
,0x60,0x60,0x60,0x60,0x60,0x30,0x00,0x00
,0x60,0x60,0x60,0x60,0x30,0x30,0x00,0x00
,0x60,0x60,0x60,0x30,0x30,0x20,0x00,0x00
,0x60,0x60,0x60,0x30,0x30,0x01,0xe0,0x00
,0x60,0x60,0x60,0x30,0x30,0x0f,0xfc,0x00
,0x60,0x60,0x60,0x30,0x30,0x3f,0xff,0x00
,0x60,0x60,0x60,0x30,0x18,0x78,0x03,0x80
,0x60,0x60,0x60,0x30,0x1c,0x60,0x01,0x80
,0x60,0x60,0x30,0x38,0x0c,0xc0,0x00,0xc0
,0x00,0x60,0x30,0x18,0x00,0xc0,0x00,0xc0
,0x00,0x60,0x30,0x18,0x00,0xc0,0x00,0xc0
,0x00,0xe0,0x30,0x0c,0x01,0xc0,0x00,0xe0
,0x00,0xc0,0x18,0x0e,0x01,0xc0,0x00,0xe0
,0x60,0xc0,0x18,0x07,0x01,0xc0,0x00,0xe0
,0x01,0xc0,0x1c,0x03,0x81,0xc0,0x00,0xe0
,0x01,0x80,0x0c,0x01,0xc1,0xc0,0x00,0xe0
,0x03,0x80,0x0e,0x00,0xf1,0xc0,0x00,0xe0
,0x0f,0x00,0x06,0x00,0x01,0xc0,0x00,0xe0
,0x3e,0x01,0x03,0x00,0x01,0xc0,0x00,0xe0
,0x30,0x03,0x83,0x80,0x1f,0xff,0xff,0xfe
,0x00,0x03,0x81,0xc0,0x3f,0xff,0xff,0xff
,0x00,0x07,0xc0,0xe0,0x30,0x00,0x00,0x03
,0x00,0x0e,0xc0,0x78,0x30,0x00,0x00,0x03
,0x00,0x3c,0x60,0x1e,0x30,0x00,0x00,0x03
,0x00,0x78,0x70,0x0f,0x30,0x00,0x00,0x03
,0x03,0xe0,0x38,0x03,0x30,0x00,0x00,0x03
,0x07,0x80,0x1c,0x00,0x30,0x00,0x00,0x03
,0xc0,0x00,0x0f,0x00,0x30,0x00,0x00,0x03
,0xc0,0x00,0x03,0x80,0x30,0x01,0xe0,0x03
,0x00,0x18,0x01,0xe0,0x30,0x03,0xf0,0x03
,0x00,0x18,0x00,0x7c,0x30,0x07,0x38,0x03
,0x00,0x0c,0x00,0x1f,0x30,0x06,0x18,0x03
,0x18,0x0e,0x00,0x07,0x30,0x06,0x18,0x03
,0x0c,0x07,0x80,0x00,0x30,0x07,0x38,0x03
,0x0e,0x03,0xc0,0x00,0x30,0x03,0x30,0x03
,0x07,0x00,0xf0,0x00,0x30,0x03,0x30,0x03
,0x03,0x00,0x7e,0x00,0x30,0x03,0x30,0x03
,0x01,0x80,0x1f,0xc0,0x30,0x03,0x30,0x03
,0x01,0xc0,0x03,0xe1,0x30,0x07,0xf8,0x03
,0x00,0xf0,0x00,0x01,0x30,0x03,0xf0,0x03
,0x00,0x38,0x00,0x00,0x30,0x00,0x00,0x03
,0x00,0x1e,0x00,0x00,0x30,0x00,0x00,0x03
,0x00,0x07,0xc0,0x00,0x30,0x00,0x00,0x03
,0x00,0x01,0xff,0x80,0x3f,0xff,0xff,0xff
,0x00,0x00,0x3f,0x80,0x1f,0xff,0xff,0xfe
};
#define FinPr_scan_width 64
#define FinPr_scan_height 64
const uint8_t PROGMEM FinPr_scan_bits[] = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x1f,0xf8,0x00,0x00,0x00
,0x00,0x00,0x00,0x7f,0xff,0x00,0x00,0x00
,0x00,0x00,0x01,0xfc,0x7f,0xc0,0x00,0x00
,0x00,0x00,0x03,0xc0,0x03,0xe0,0x00,0x00
,0x00,0x00,0x07,0x80,0x00,0xf0,0x00,0x00
,0x00,0x00,0x0e,0x00,0x00,0x3c,0x00,0x00
,0x00,0x00,0x1c,0x1f,0xfc,0x1c,0x00,0x00
,0x00,0x00,0x38,0x7f,0xfe,0x0e,0x00,0x00
,0x00,0x00,0x78,0xf8,0x0f,0x87,0x00,0x00
,0x00,0x00,0x71,0xe0,0x03,0xc7,0x00,0x00
,0x00,0x00,0xe3,0x80,0x01,0xc3,0x80,0x00
,0x00,0x00,0xc3,0x83,0xc0,0xe3,0x80,0x00
,0x00,0x00,0xc7,0x0f,0xf0,0x71,0x80,0x00
,0x00,0x00,0x06,0x1f,0xf8,0x71,0xc0,0x00
,0x00,0x00,0x0e,0x1c,0x3c,0x31,0xc0,0x00
,0x00,0x00,0x1c,0x38,0x1c,0x31,0xc0,0x00
,0x00,0x00,0x38,0x70,0x0e,0x39,0xc0,0x00
,0x00,0x01,0xf0,0x71,0x8e,0x39,0xc0,0x00
,0x00,0x03,0xe0,0xe1,0x86,0x31,0xc0,0x00
,0x00,0x03,0x81,0xe3,0x8e,0x31,0x80,0x00
,0x00,0x00,0x03,0xc3,0x8e,0x33,0x80,0x00
,0x00,0x00,0x07,0x87,0x0c,0x73,0x80,0x00
,0x00,0x00,0x1f,0x0e,0x1c,0x73,0x80,0x00
,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xfe
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xfe
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x03,0xf0,0x1e,0x3e,0x1c,0x00,0x00
,0x00,0x03,0x80,0x7c,0x77,0x0f,0x00,0x00
,0x00,0x00,0x01,0xf0,0xe3,0x07,0xc0,0x00
,0x00,0x00,0x07,0xe3,0xc3,0x81,0xf0,0x00
,0x00,0x00,0x3f,0x87,0x81,0xc0,0x60,0x00
,0x00,0x01,0xfc,0x1f,0x00,0xf0,0x00,0x00
,0x00,0x01,0xe0,0x3c,0x00,0x7c,0x00,0x00
,0x00,0x00,0x00,0xf8,0x78,0x1f,0x00,0x00
,0x00,0x00,0x07,0xe0,0xfc,0x0f,0xc0,0x00
,0x00,0x00,0x3f,0x83,0xef,0x03,0xc0,0x00
,0x00,0x00,0xfc,0x0f,0x87,0x80,0x00,0x00
,0x00,0x00,0x70,0x1f,0x03,0xe0,0x00,0x00
,0x00,0x00,0x00,0x7c,0x00,0xf8,0x00,0x00
,0x00,0x00,0x01,0xf0,0x00,0x3e,0x00,0x00
,0x00,0x00,0x0f,0xc0,0xf8,0x0f,0x00,0x00
,0x00,0x00,0x1f,0x03,0xfe,0x02,0x00,0x00
,0x00,0x00,0x0c,0x0f,0x8f,0x80,0x00,0x00
,0x00,0x00,0x00,0x3f,0x03,0xe0,0x00,0x00
,0x00,0x00,0x00,0xf8,0x00,0xf0,0x00,0x00
,0x00,0x00,0x01,0xe0,0x00,0x30,0x00,0x00
,0x00,0x00,0x01,0xc0,0xf8,0x00,0x00,0x00
,0x00,0x00,0x00,0x07,0xfe,0x00,0x00,0x00
,0x00,0x00,0x00,0x0f,0x8e,0x00,0x00,0x00
,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

void setup() {

  Serial.begin(9600);        
  Serial.println('\n');
  Serial.println("System initialized");

  // Connect to WiFi
  WiFi.begin(ssid, password);             
  Serial.print("Connecting to ");
  Serial.print(ssid); Serial.println(" ...");
  


  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println('\n');
  Serial.println("Connection established!");  
  Serial.print("IP address:\t");
  Serial.println(WiFi.localIP());
  

  // Use HTTPSRedirect class to create a new TLS connection
  client = new HTTPSRedirect(httpsPort);
  client->setInsecure();
  client->setPrintResponseBody(true);
  client->setContentTypeHeader("application/json");
  
  Serial.print("Connecting to ");
  Serial.println(host);

  // Try to connect for a maximum of 5 times
  bool flag = false;
  for (int i=0; i<5; i++){ 
    int retval = client->connect(host, httpsPort);
    if (retval == 1){
       flag = true;
       Serial.println("Connected");
       break;
    }
    else
      Serial.println("Connection failed. Retrying...");
  }
  if (!flag){
    Serial.print("Could not connect to server: ");
    Serial.println(host);
    return;
  }
  delete client;    // delete HTTPSRedirect object
  client = nullptr; // delete HTTPSRedirect object

display.begin(0x3C);
  delay(2000);
  display.clearDisplay();
  display.setTextColor(SH110X_WHITE);
  delay(10);

while (!Serial);  // For Yun/Leo/Micro/Zero/...
  delay(100);
  Serial.println("\n\nAdafruit finger detect test");
 
  // set the data rate for the sensor serial port
  finger.begin(57600);
  delay(5);
  if (finger.verifyPassword()) {
    Serial.println("Found fingerprint sensor!");
   
  } else {
    Serial.println("Did not find fingerprint sensor :(");
    

    while (1) { delay(1); }
  }
 
  Serial.println(F("Reading sensor parameters"));
  finger.getParameters();
  Serial.print(F("Status: 0x")); Serial.println(finger.status_reg, HEX);
  Serial.print(F("Sys ID: 0x")); Serial.println(finger.system_id, HEX);
  Serial.print(F("Capacity: ")); Serial.println(finger.capacity);
  Serial.print(F("Security level: ")); Serial.println(finger.security_level);
  Serial.print(F("Device address: ")); Serial.println(finger.device_addr, HEX);
  Serial.print(F("Packet len: ")); Serial.println(finger.packet_len);
  Serial.print(F("Baud rate: ")); Serial.println(finger.baud_rate);
  display.clearDisplay();
  display.drawBitmap( 32, 0, Wifi_connected_bits, Wifi_connected_width, Wifi_connected_height, SH110X_WHITE);
  display.display();
  display.print("WiFi connected");
  delay(2000);
 
  finger.getTemplateCount();
 
  if (finger.templateCount == 0) {
    Serial.print("Sensor doesn't contain any fingerprint data. Please run the 'enroll' example.");
  }
  else {
    Serial.println("Waiting for valid finger...");
      Serial.print("Sensor contains "); Serial.print(finger.templateCount); Serial.println(" templates");
  }
  
}

void loop() {

  // create some fake data to publish
  display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("");
  display.drawBitmap( 32, 0, FinPr_scan_bits, FinPr_scan_width, FinPr_scan_height, SH110X_WHITE); 
  display.display();

getFingerprintID();

  
  }

void updatesheet(String user, String id, String enter)

{

  static bool flag = false;
  if (!flag){
    client = new HTTPSRedirect(httpsPort);
    client->setInsecure();
    flag = true;
    client->setPrintResponseBody(true);
    client->setContentTypeHeader("application/json");
  }
  if (client != nullptr){
    if (!client->connected()){
      client->connect(host, httpsPort);
    }
  }
  else{
    Serial.println("Error creating client object!");
  }
  
  // Create json object string to send to Google Sheets
  payload = payload_base + "\"" + user + "," + id + "," + enter + "\"}";
  
  // Publish data to Google Sheets
  Serial.println("Publishing data...");
  Serial.println(payload);
  if(client->POST(url, host, payload)){ 
    // do stuff here if publish was successful
  }
  else{
    // do stuff here if publish was not successful
    Serial.println("Error while connecting");
  }

  // a delay of several seconds is required before publishing again    
  delay(500);
  }

uint8_t getFingerprintID() {
  uint8_t p = finger.getImage();
  switch (p) {
    case FINGERPRINT_OK:
      Serial.println("Image taken");
      display.clearDisplay();
      display.drawBitmap( 34, 0, FinPr_valid_bits, FinPr_valid_width, FinPr_valid_height, SH110X_WHITE);
      display.display();
      break;
    case FINGERPRINT_NOFINGER:
      Serial.println("No finger detected");
      display.clearDisplay();
      display.drawBitmap( 34, 0, FinPr_failed_bits, FinPr_failed_width, FinPr_failed_height, SH110X_WHITE);
      display.display();
      break;
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Communication error");
      return p;
    case FINGERPRINT_IMAGEFAIL:
      Serial.println("Imaging error");
      return p;
    default:
      Serial.println("Unknown error");
      return p;
  }
 
  // OK success!
 
  p = finger.image2Tz();
  switch (p) {
    case FINGERPRINT_OK:
      Serial.println("Image converted");
      break;
    case FINGERPRINT_IMAGEMESS:
      Serial.println("Image too messy");
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Communication error");
      return p;
    case FINGERPRINT_FEATUREFAIL:
      Serial.println("Could not find fingerprint features");
      return p;
    case FINGERPRINT_INVALIDIMAGE:
      Serial.println("Could not find fingerprint features");
      return p;
    default:
      Serial.println("Unknown error");
      return p;
  }
 
  // OK converted!
  p = finger.fingerSearch();
  Serial.println("finger print id");
  Serial.println(p);
  if (p == FINGERPRINT_OK) {
    Serial.println("Found a print match!");
    finger.LEDcontrol(FINGERPRINT_LED_FLASHING, 25, FINGERPRINT_LED_PURPLE, 10);
    delay(500);
    if(finger.fingerID==2)
    {
  if(u==0)
    {
  display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("Welcome sayed mos.. "); 
  display.display();
       user="sayed mostafiz";
      id="2";
      enter="in";
       updatesheet(user,id, enter);
      
      u=1;
    }
    
}
   if(finger.fingerID==4) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Mim"); 
  display.display();
      enter="";
      user="mim";
      id="4";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
    
     
  }
   if(finger.fingerID==5) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Momin"); 
  display.display();
      enter="";
      user="Momin";
      id="5";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
    
    
  }
  
  }
  if(finger.fingerID==6) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome kayum"); 
  display.display();
      enter="";
      user="kayum";
      id="6";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }

   if(finger.fingerID==7) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome ifti "); 
  display.display();
      enter="";
      user="Iftakharul";
      id="7";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }

   if(finger.fingerID==8) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Sayeed"); 
  display.display();
      enter="";
      user="sayeed";
      id="8";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }

   if(finger.fingerID==9) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Tamim"); 
  display.display();
      enter="";
      user="Tamim";
      id="9";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }

   if(finger.fingerID==10) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome pavel"); 
  display.display();
      enter="";
      user="pavel";
      id="10";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }

   if(finger.fingerID==11) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Raju"); 
  display.display();
      enter="";
      user="Raju";
      id="11";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }

   if(finger.fingerID==12) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome parvez"); 
  display.display();
      enter="";
      user="Parvez";
      id="12";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }

   if(finger.fingerID==13) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Rifat"); 
  display.display();
      enter="";
      user="Rifat";
      id="13";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }

   if(finger.fingerID==14) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Tanmoy"); 
  display.display();
      enter="";
      user="Tanmoy";
      id="14";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==15) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Hamim"); 
  display.display();
      enter="";
      user="Hamim";
      id="15";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==17) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Rudra"); 
  display.display();
      enter="";
      user="Rudra";
      id="17";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==18) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Joy"); 
  display.display();
      enter="";
      user="Joy";
      id="18";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==19) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Emon"); 
  display.display();
      enter="";
      user="Emon";
      id="19";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==20) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Shuvo"); 
  display.display();
      enter="";
      user="Shuvo";
      id="20";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==22) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome Maruf"); 
  display.display();
      enter="";
      user="maruf";
      id="22";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==23) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome mostafizur"); 
  display.display();
      enter="";
      user="mostafizur";
      id="23";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==26) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome nandi"); 
  display.display();
      enter="";
      user="nandi";
      id="26";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==28) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome shapath"); 
  display.display();
      enter="";
      user="shapath";
      id="28";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==29) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome shakil"); 
  display.display();
      enter="";
      user="shakil";
      id="29";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==30) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome abrar"); 
  display.display();
      enter="";
      user="abrar";
      id="30";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID=31) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome khaleda"); 
  display.display();
      enter="";
      user="khaleda";
      id="31";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==32) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome utsho"); 
  display.display();
      enter="";
      user="utsho";
      id="32";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==33) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome polash"); 
  display.display();
      enter="";
      user="polash";
      id="33";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==34) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome humidy"); 
  display.display();
      enter="";
      user="humidy";
      id="34";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==36) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome usha"); 
  display.display();
      enter="";
      user="usha";
      id="36";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==37) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome mukta"); 
  display.display();
      enter="";
      user="mukta";
      id="37";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==40) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome azam"); 
  display.display();
      enter="";
      user="azam";
      id="40";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==41) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome alif"); 
  display.display();
      enter="";
      user="alif";
      id="41";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==42) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome robin"); 
  display.display();
      enter="";
      user="";
      id="42";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==44) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome kaium"); 
  display.display();
      enter="";
      user="";
      id="44";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==45) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome elma"); 
  display.display();
      enter="";
      user="";
      id="45";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==46) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome hamim"); 
  display.display();
      enter="";
      user="";
      id="46";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==47) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome riath"); 
  display.display();
      enter="";
      user="";
      id="47";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==48) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome fahim"); 
  display.display();
      enter="";
      user="";
      id="48";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==49) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome fabiha"); 
  display.display();
      enter="";
      user="";
      id="49";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==51) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome tawfiq"); 
  display.display();
      enter="";
      user="";
      id="51";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==52) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome maaz"); 
  display.display();
      enter="";
      user="";
      id="52";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==53) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome asik"); 
  display.display();
      enter="";
      user="";
      id="53";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==54) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome fariha"); 
  display.display();
      enter="";
      user="";
      id="54";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==55) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome mokbul"); 
  display.display();
      enter="";
      user="";
      id="55";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==57) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome mainak"); 
  display.display();
      enter="";
      user="";
      id="57";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==58) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome shuhush"); 
  display.display();
      enter="";
      user="";
      id="58";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==59) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome azad"); 
  display.display();
      enter="";
      user="";
      id="59";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==61) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome taswar"); 
  display.display();
      enter="";
      user="";
      id="61";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==63) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome shafiq"); 
  display.display();
      enter="";
      user="";
      id="63";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==64) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome hafiz"); 
  display.display();
      enter="";
      user="";
      id="64";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
    else if(u==1)
    {
  display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("Bye "); 
  display.display();
      enter="";
      user="hafiz";
      id="64";
      enter="out";
             updatesheet(user,id, enter);
      u=0;
    }
}
   }
   if(finger.fingerID==65) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome 66"); 
  display.display();
      enter="";
      user="";
      id="65";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==66) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome akhi"); 
  display.display();
      enter="";
      user="";
      id="66";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==67) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome naymur"); 
  display.display();
      enter="";
      user="";
      id="67";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }
   if(finger.fingerID==68) 
   {
    if(v==0)
    {
   display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(0, 10);
  display.print("welcome sakib"); 
  display.display();
      enter="";
      user="";
      id="68";
      enter="in";
             updatesheet(user,id, enter);
      
      v=1;
    }
   }

  
  else if (p == FINGERPRINT_PACKETRECIEVEERR) {
    Serial.println("Communication error");
    return p;
  } else if (p == FINGERPRINT_NOTFOUND) {
    finger.LEDcontrol(FINGERPRINT_LED_FLASHING, 25, FINGERPRINT_LED_RED, 10);
  delay(1000);
  Serial.println("Did not find a match");
    return p;
  } else {
    Serial.println("Unknown error");
    return p;
  }
 
  // found a match!
  Serial.print("Found ID #"); Serial.print(finger.fingerID);
  Serial.print(" with confidence of "); Serial.println(finger.confidence);
 
  return finger.fingerID;
}
 
// returns -1 if failed, otherwise returns ID #
int getFingerprintIDez() {
  uint8_t p = finger.getImage();
  if (p != FINGERPRINT_OK)  return -1;
 
  p = finger.image2Tz();
  if (p != FINGERPRINT_OK)  return -1;
 
  p = finger.fingerFastSearch();
  if (p != FINGERPRINT_OK)  return -1;
 
  // found a match!
  Serial.print("Found ID #"); Serial.print(finger.fingerID);
  Serial.print(" with confidence of "); Serial.println(finger.confidence);
  return finger.fingerID;
}